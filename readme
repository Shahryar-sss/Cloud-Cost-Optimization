thread 1 -> create VM with cloudlet on appropriate host when new job comes
            delete VM when VM is freed

thread 2 -> Clock -> every second fires once
            on every clock tick -> for every cloudlet -> length = length - mips of allocated VM
                                                      -> costAcquired  = costAcquired + currentPriceOfVm/3600
                                                      -> currentPrice = Data[vm.getInstanceType][5][int(i/60)]

            generate RAM at instant i and check with VM ram -> if required migrate
                                                            -> set allocated vm id = None

            check price at instant i from Data -> Data[vm.getInstanceType]
            if price > on demand price -> 1. check other spot score and ram -> migrate
                                          2. migrate to on demand instance

thread 3 -> Monitors length of every cloudlet
            When length == 0 -> deletes cloudlet

class Data -> Dict {name} -> [List]
                              1. mips
                              2. ram
                              3. bw
                              4. on demand price
                              5. List -> spot Price
                              6. List -> spot Score

Main class (Test) -> Cloud.init() -> execute Dataset class and store in data variable

from Dataset import Data